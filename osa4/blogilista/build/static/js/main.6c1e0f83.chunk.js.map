{"version":3,"sources":["services/blogs.js","services/login.js","components/Notification.jsx","components/LoginForm.jsx","components/BlogForm.jsx","components/Blog.jsx","components/Blogs.jsx","components/Togglable.jsx","App.js","index.js"],"names":["baseUrl","token","methods","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","id","erase","delete","login","credentials","Notification","message","type","Card","className","style","color","LoginForm","handleLogin","handlePasswordChange","handleUsernameChange","username","password","inputRef","useRef","useState","visible","setVisible","useEffect","current","focus","Button","variant","onClick","Paper","elevation","onSubmit","TextField","placeholder","value","onChange","ref","Box","m","BlogForm","createBlog","title","setTitle","author","setAuthor","url","setUrl","event","preventDefault","target","Blog","blog","likeHandler","removeHandler","user","displayInfo","setDisplayInfo","toggleVisibility","pr","pt","pb","p","window","confirm","Link","href","rel","likes","Blogs","blogs","sortedBlogs","sort","b","map","Togglable","React","forwardRef","props","setvisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","buttonLabel","children","displayName","App","setBlogs","notification","setNotification","notificationType","setNotificationType","setUsername","setPassword","setUser","blogFormRef","fetchBlogs","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","handleNotifications","setTimeout","e","loginService","setItem","stringify","handleBlogSubmit","blogObject","name","removeItem","fetch","notificationHandler","newBlog","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c1e0f83.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst erase = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\nconst methods = { setToken, getAll, create, update, erase };\r\n\r\nexport default methods;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\n/**\r\n * @param credentials - User credential used for logging in\r\n */\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React from 'react';\r\nimport { Card } from '@material-ui/core';\r\n\r\n/**\r\n * @param message Message shown to user\r\n * @param type Message type [error, success]\r\n */\r\nexport const Notification = ({ message, type }) => {\r\n  if (!message || !type) return null;\r\n\r\n  const getStyles = () => {\r\n    if (type === 'error') return { color: 'red' };\r\n    if (type === 'success') return { color: 'green' };\r\n  };\r\n\r\n  return (\r\n    <Card className=\"notification\" style={getStyles()}>\r\n      {message}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Box, TextField, Paper } from '@material-ui/core';\r\n\r\n/**\r\n * @param handleLogin\r\n * @param handlePasswordChange\r\n * @param handleUsernameChange\r\n * @param username\r\n * @param password\r\n */\r\nexport const LoginForm = ({\r\n  handleLogin,\r\n  handlePasswordChange,\r\n  handleUsernameChange,\r\n  username,\r\n  password,\r\n}) => {\r\n  const inputRef = useRef();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Sets focus on username input when page loads\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Log in</h1>\r\n        <div className=\"cred-div\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={toggleVisibility}\r\n          >\r\n            {!visible ? 'Show valid login credentials' : 'Hide credentials'}\r\n          </Button>\r\n          {visible && (\r\n            <Paper elevation={3} className=\"login-credentials\">\r\n              <p>Sivulle voi kirjautua käyttäen tunnuksia</p>\r\n              <p>petri1807 : salasana</p>\r\n              <p>satanist666 : dineshatemylunch</p>\r\n              <p>themanfrompakistan : iloveteslas</p>\r\n              <p>bitchard : middleout</p>\r\n              <p>jared : gwent</p>\r\n            </Paper>\r\n          )}\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n          <div className=\"input-container\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              color=\"secondary\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n              ref={inputRef}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              color=\"secondary\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n          <Box m={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"login-button\"\r\n              type=\"submit\"\r\n              className=\"button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Box, TextField } from '@material-ui/core';\r\n\r\n/**\r\n * @param createBlog - Handler for blog creation\r\n */\r\nexport const BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [url, setUrl] = useState('');\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault();\r\n    createBlog({\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    });\r\n\r\n    setTitle('');\r\n    setAuthor('');\r\n    setUrl('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addBlog}>\r\n      <div className=\"input-container\">\r\n        <TextField\r\n          variant=\"standard\"\r\n          color=\"secondary\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          // multiline\r\n          value={title}\r\n          id=\"title\"\r\n          onChange={({ target }) => setTitle(target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <TextField\r\n          variant=\"standard\"\r\n          color=\"secondary\"\r\n          type=\"text\"\r\n          placeholder=\"Author\"\r\n          value={author}\r\n          id=\"author\"\r\n          onChange={({ target }) => setAuthor(target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <TextField\r\n          variant=\"standard\"\r\n          color=\"secondary\"\r\n          type=\"text\"\r\n          placeholder=\"URL\"\r\n          value={url}\r\n          id=\"url\"\r\n          onChange={({ target }) => setUrl(target.value)}\r\n        />\r\n      </div>\r\n      <Box m=\"1em\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          id=\"blogSubmit\"\r\n          type=\"submit\"\r\n          className=\"button\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Paper, Box, Link } from '@material-ui/core';\r\n\r\n/**\r\n * @param blog individual blog item\r\n * @param likeHandler call like handler\r\n * @param removeHandler call remove handler\r\n * @param user current logged in user\r\n */\r\nexport const Blog = ({ blog, likeHandler, removeHandler, user }) => {\r\n  const [displayInfo, setDisplayInfo] = useState(false);\r\n\r\n  const toggleVisibility = () => {\r\n    setDisplayInfo(!displayInfo);\r\n  };\r\n\r\n  const handleLike = () => {\r\n    likeHandler(blog);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\r\n      removeHandler(blog);\r\n    }\r\n  };\r\n\r\n  if (!displayInfo) {\r\n    return (\r\n      <Paper elevation={3} className=\"blogItem\">\r\n        <div className=\"blog-header\">\r\n          <p className=\"author\"> {blog.author}</p>\r\n          <p className=\"blog-title\">{blog.title}</p>\r\n        </div>\r\n        <div className=\"blog-buttons\">\r\n          <Box pr=\"0.5em\" pt=\"0.5em\" pb=\"0.5em\">\r\n            <Button variant=\"outlined\" id=\"view\" onClick={toggleVisibility}>\r\n              View\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={3} className=\"blogItem\">\r\n      <div className=\"blog-header\">\r\n        <p className=\"author\">{blog.author}</p>\r\n        <p className=\"blog-title\">{blog.title}</p>\r\n      </div>\r\n      <div className=\"blog-buttons\">\r\n        <Box pr=\"0.5em\" pt=\"0.5em\" pb=\"0.5em\">\r\n          <Button variant=\"outlined\" id=\"hide\" onClick={toggleVisibility}>\r\n            hide\r\n          </Button>\r\n        </Box>\r\n\r\n        <Box p=\"0.5em\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            id=\"like\"\r\n            className=\"button\"\r\n            onClick={handleLike}\r\n          >\r\n            like\r\n          </Button>\r\n        </Box>\r\n\r\n        {blog.user.username === user.username && (\r\n          <Box p=\"0.5em\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"remove\"\r\n              onClick={handleRemove}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </div>\r\n      <div className=\"blog-details\">\r\n        <Link href={blog.url} target=\"_blank\" rel=\"noreferrer\">\r\n          {blog.url}\r\n        </Link>\r\n        <div>Likes {blog.likes}</div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Blog } from './Blog';\r\n\r\n/**\r\n * @param blogs Array of blogs\r\n * @param likeHandler call like handler\r\n * @param removeHandler call remove handler\r\n * @param user current logged in user\r\n */\r\nexport const Blogs = ({ blogs, likeHandler, removeHandler, user }) => {\r\n  const sortedBlogs = blogs.sort((a, b) => (a.likes > b.likes ? -1 : 1));\r\n\r\n  return (\r\n    <div className=\"blogTable\">\r\n      {sortedBlogs.map((blog) => (\r\n        <Blog\r\n          key={blog.id}\r\n          blog={blog}\r\n          likeHandler={likeHandler}\r\n          removeHandler={removeHandler}\r\n          user={user}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\n\r\n/**\r\n * @param buttonLabel Label for button to open each blog item\r\n * @param ref for using toggleVisibility outside the component\r\n */\r\nexport const Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setvisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setvisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible} className=\"togglable\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          id=\"openTogglable\"\r\n          className=\"button\"\r\n          onClick={toggleVisibility}\r\n        >\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible} className=\"togglable\">\r\n        {/* Create new form and button */}\r\n        {props.children}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className=\"button cancel\"\r\n          onClick={toggleVisibility}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport blogService from './services/blogs';\r\nimport loginService from './services/login';\r\n\r\nimport { Notification } from './components/Notification';\r\nimport { LoginForm } from './components/LoginForm';\r\nimport { BlogForm } from './components/BlogForm';\r\nimport { Blogs } from './components/Blogs';\r\nimport { Togglable } from './components/Togglable';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const [notificationType, setNotificationType] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  const blogFormRef = useRef();\r\n\r\n  const fetchBlogs = () => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n\r\n    fetchBlogs();\r\n  }, []);\r\n\r\n  /**\r\n   * @param message Message to deliver\r\n   * @param type Error, success\r\n   */\r\n  const handleNotifications = (message, type) => {\r\n    setNotification(message);\r\n    setNotificationType(type);\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n      setNotificationType(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\r\n\r\n      blogService.setToken(user.token);\r\n      setUser(user);\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (error) {\r\n      handleNotifications('Wrong credentials', 'error');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedUser');\r\n    blogService.setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const handleUsernameInput = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleLike = (newObject) => {\r\n    const newBlog = { ...newObject, likes: newObject.likes + 1 };\r\n    blogService.update(newBlog);\r\n\r\n    fetchBlogs();\r\n  };\r\n\r\n  const handleBlogSubmit = async (blogObject) => {\r\n    blogFormRef.current.toggleVisibility();\r\n\r\n    try {\r\n      const response = await blogService.create(blogObject);\r\n      if (response) {\r\n        fetchBlogs();\r\n        handleNotifications(`A new blog ${response.title} added`, 'success');\r\n      }\r\n    } catch (error) {\r\n      handleNotifications(error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleBlogRemove = (blog) => {\r\n    blogService\r\n      .erase(blog.id)\r\n      .then(() => {\r\n        fetchBlogs();\r\n        handleNotifications(\r\n          `Deleted ${blog.title} by ${blog.author}`,\r\n          'success'\r\n        );\r\n      })\r\n      .catch((error) => handleNotifications(error.message), 'error');\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {user === null ? (\r\n        <div>\r\n          <Notification message={notification} type={notificationType} />\r\n          <LoginForm\r\n            handleLogin={handleLogin}\r\n            handleUsernameChange={handleUsernameInput}\r\n            handlePasswordChange={handlePasswordInput}\r\n            username={username}\r\n            password={password}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <header>\r\n            <h1 className=\"page-title\">Blogs</h1>\r\n            <div className=\"user-info\">\r\n              <span>{user.name} logged in</span>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className=\"button\"\r\n                onClick={handleLogout}\r\n              >\r\n                Log out\r\n              </Button>\r\n            </div>\r\n          </header>\r\n          <main>\r\n            <Notification message={notification} type={notificationType} />\r\n            <Togglable buttonLabel=\"New blog\" ref={blogFormRef}>\r\n              <BlogForm createBlog={handleBlogSubmit} />\r\n            </Togglable>\r\n            <Blogs\r\n              blogs={blogs}\r\n              fetch={fetchBlogs}\r\n              notificationHandler={handleNotifications}\r\n              likeHandler={handleLike}\r\n              removeHandler={handleBlogRemove}\r\n              user={user}\r\n            />\r\n          </main>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}