{"version":3,"sources":["services/blogs.js","services/login.js","components/Notification.jsx","components/LoginForm.jsx","components/BlogForm.jsx","components/Blog.jsx","components/Blogs.jsx","components/Togglable.jsx","App.js","index.js"],"names":["baseUrl","token","methods","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","id","erase","delete","login","credentials","Notification","message","type","Card","className","style","color","LoginForm","handleLogin","handlePasswordChange","handleUsernameChange","username","password","inputRef","useRef","useEffect","current","focus","onSubmit","TextField","variant","placeholder","value","onChange","ref","Box","m","Button","BlogForm","createBlog","useState","title","setTitle","author","setAuthor","url","setUrl","event","preventDefault","target","Blog","blog","likeHandler","removeHandler","user","displayInfo","setDisplayInfo","toggleVisibility","Paper","elevation","pr","pt","pb","onClick","p","window","confirm","Link","href","rel","likes","Blogs","blogs","sortedBlogs","sort","b","map","Togglable","React","forwardRef","props","visible","setvisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","buttonLabel","children","displayName","App","setBlogs","notification","setNotification","notificationType","setNotificationType","setUsername","setPassword","setUser","blogFormRef","fetchBlogs","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","handleNotifications","setTimeout","e","loginService","setItem","stringify","handleBlogSubmit","blogObject","name","removeItem","fetch","notificationHandler","newBlog","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1793bc95.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst erase = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\nconst methods = { setToken, getAll, create, update, erase };\r\n\r\nexport default methods;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\n/**\r\n * @param credentials - User credential used for logging in\r\n */\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React from 'react';\r\nimport { Card } from '@material-ui/core';\r\n\r\n/**\r\n * @param message Message shown to user\r\n * @param type Message type [error, success]\r\n */\r\nexport const Notification = ({ message, type }) => {\r\n  if (!message || !type) return null;\r\n\r\n  const getStyles = () => {\r\n    if (type === 'error') return { color: 'red' };\r\n    if (type === 'success') return { color: 'green' };\r\n  };\r\n\r\n  return (\r\n    <Card className=\"notification\" style={getStyles()}>\r\n      {message}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Box, TextField } from '@material-ui/core';\r\n\r\n/**\r\n * @param handleLogin\r\n * @param handlePasswordChange\r\n * @param handleUsernameChange\r\n * @param username\r\n * @param password\r\n */\r\nexport const LoginForm = ({\r\n  handleLogin,\r\n  handlePasswordChange,\r\n  handleUsernameChange,\r\n  username,\r\n  password,\r\n}) => {\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Sets focus on username input when page loads\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Log in</h1>\r\n      </header>\r\n      <main>\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n          <div className=\"input-container\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              color=\"secondary\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n              ref={inputRef}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              color=\"secondary\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n          <Box m={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"login-button\"\r\n              type=\"submit\"\r\n              className=\"button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Box, TextField } from '@material-ui/core';\r\n\r\n/**\r\n * @param createBlog - Handler for blog creation\r\n */\r\nexport const BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [url, setUrl] = useState('');\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault();\r\n    createBlog({\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    });\r\n\r\n    setTitle('');\r\n    setAuthor('');\r\n    setUrl('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addBlog}>\r\n      <div className=\"input-container\">\r\n        <TextField\r\n          variant=\"standard\"\r\n          color=\"secondary\"\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          // multiline\r\n          value={title}\r\n          id=\"title\"\r\n          onChange={({ target }) => setTitle(target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <TextField\r\n          variant=\"standard\"\r\n          color=\"secondary\"\r\n          type=\"text\"\r\n          placeholder=\"Author\"\r\n          value={author}\r\n          id=\"author\"\r\n          onChange={({ target }) => setAuthor(target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <TextField\r\n          variant=\"standard\"\r\n          color=\"secondary\"\r\n          type=\"text\"\r\n          placeholder=\"URL\"\r\n          value={url}\r\n          id=\"url\"\r\n          onChange={({ target }) => setUrl(target.value)}\r\n        />\r\n      </div>\r\n      <Box m=\"1em\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          id=\"blogSubmit\"\r\n          type=\"submit\"\r\n          className=\"button\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Paper, Box, Link } from '@material-ui/core';\r\n\r\n/**\r\n * @param blog individual blog item\r\n * @param likeHandler call like handler\r\n * @param removeHandler call remove handler\r\n * @param user current logged in user\r\n */\r\nexport const Blog = ({ blog, likeHandler, removeHandler, user }) => {\r\n  const [displayInfo, setDisplayInfo] = useState(false);\r\n\r\n  const toggleVisibility = () => {\r\n    setDisplayInfo(!displayInfo);\r\n  };\r\n\r\n  const handleLike = () => {\r\n    likeHandler(blog);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\r\n      removeHandler(blog);\r\n    }\r\n  };\r\n\r\n  if (!displayInfo) {\r\n    return (\r\n      <Paper elevation={3} className=\"blogItem\">\r\n        <div className=\"blog-header\">\r\n          <p className=\"author\"> {blog.author}</p>\r\n          <p className=\"blog-title\">{blog.title}</p>\r\n        </div>\r\n        <div className=\"blog-buttons\">\r\n          <Box pr=\"0.5em\" pt=\"0.5em\" pb=\"0.5em\">\r\n            <Button variant=\"outlined\" id=\"view\" onClick={toggleVisibility}>\r\n              View\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={3} className=\"blogItem\">\r\n      <div className=\"blog-header\">\r\n        <p className=\"author\">{blog.author}</p>\r\n        <p className=\"blog-title\">{blog.title}</p>\r\n      </div>\r\n      <div className=\"blog-buttons\">\r\n        <Box pr=\"0.5em\" pt=\"0.5em\" pb=\"0.5em\">\r\n          <Button variant=\"outlined\" id=\"hide\" onClick={toggleVisibility}>\r\n            hide\r\n          </Button>\r\n        </Box>\r\n\r\n        <Box p=\"0.5em\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            id=\"like\"\r\n            className=\"button\"\r\n            onClick={handleLike}\r\n          >\r\n            like\r\n          </Button>\r\n        </Box>\r\n\r\n        {blog.user.username === user.username && (\r\n          <Box p=\"0.5em\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"remove\"\r\n              onClick={handleRemove}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </div>\r\n      <div className=\"blog-details\">\r\n        <Link href={blog.url} target=\"_blank\" rel=\"noreferrer\">\r\n          {blog.url}\r\n        </Link>\r\n        <div>Likes {blog.likes}</div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Blog } from './Blog';\r\n\r\n/**\r\n * @param blogs Array of blogs\r\n * @param likeHandler call like handler\r\n * @param removeHandler call remove handler\r\n * @param user current logged in user\r\n */\r\nexport const Blogs = ({ blogs, likeHandler, removeHandler, user }) => {\r\n  const sortedBlogs = blogs.sort((a, b) => (a.likes > b.likes ? -1 : 1));\r\n\r\n  return (\r\n    <div className=\"blogTable\">\r\n      {sortedBlogs.map((blog) => (\r\n        <Blog\r\n          key={blog.id}\r\n          blog={blog}\r\n          likeHandler={likeHandler}\r\n          removeHandler={removeHandler}\r\n          user={user}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\n\r\n/**\r\n * @param buttonLabel Label for button to open each blog item\r\n * @param ref for using toggleVisibility outside the component\r\n */\r\nexport const Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setvisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setvisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible} className=\"togglable\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          id=\"openTogglable\"\r\n          className=\"button\"\r\n          onClick={toggleVisibility}\r\n        >\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible} className=\"togglable\">\r\n        {/* Create new form and button */}\r\n        {props.children}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className=\"button cancel\"\r\n          onClick={toggleVisibility}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport blogService from './services/blogs';\r\nimport loginService from './services/login';\r\n\r\nimport { Notification } from './components/Notification';\r\nimport { LoginForm } from './components/LoginForm';\r\nimport { BlogForm } from './components/BlogForm';\r\nimport { Blogs } from './components/Blogs';\r\nimport { Togglable } from './components/Togglable';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const [notificationType, setNotificationType] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  const blogFormRef = useRef();\r\n\r\n  const fetchBlogs = () => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      blogService.setToken(user.token);\r\n    }\r\n\r\n    fetchBlogs();\r\n  }, []);\r\n\r\n  /**\r\n   * @param message Message to deliver\r\n   * @param type Error, success\r\n   */\r\n  const handleNotifications = (message, type) => {\r\n    setNotification(message);\r\n    setNotificationType(type);\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n      setNotificationType(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\r\n\r\n      blogService.setToken(user.token);\r\n      setUser(user);\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (error) {\r\n      handleNotifications('Wrong credentials', 'error');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedUser');\r\n    blogService.setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const handleUsernameInput = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleLike = (newObject) => {\r\n    const newBlog = { ...newObject, likes: newObject.likes + 1 };\r\n    blogService.update(newBlog);\r\n\r\n    fetchBlogs();\r\n  };\r\n\r\n  const handleBlogSubmit = async (blogObject) => {\r\n    blogFormRef.current.toggleVisibility();\r\n\r\n    try {\r\n      const response = await blogService.create(blogObject);\r\n      if (response) {\r\n        fetchBlogs();\r\n        handleNotifications(`A new blog ${response.title} added`, 'success');\r\n      }\r\n    } catch (error) {\r\n      handleNotifications(error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleBlogRemove = (blog) => {\r\n    blogService\r\n      .erase(blog.id)\r\n      .then(() => {\r\n        fetchBlogs();\r\n        handleNotifications(\r\n          `Deleted ${blog.title} by ${blog.author}`,\r\n          'success'\r\n        );\r\n      })\r\n      .catch((error) => handleNotifications(error.message), 'error');\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {user === null ? (\r\n        <div>\r\n          <Notification message={notification} type={notificationType} />\r\n          <LoginForm\r\n            handleLogin={handleLogin}\r\n            handleUsernameChange={handleUsernameInput}\r\n            handlePasswordChange={handlePasswordInput}\r\n            username={username}\r\n            password={password}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <header>\r\n            <h1 className=\"page-title\">Blogs</h1>\r\n            <div className=\"user-info\">\r\n              <span>{user.name} logged in</span>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className=\"button\"\r\n                onClick={handleLogout}\r\n              >\r\n                Log out\r\n              </Button>\r\n            </div>\r\n          </header>\r\n          <main>\r\n            <Notification message={notification} type={notificationType} />\r\n            <Togglable buttonLabel=\"New blog\" ref={blogFormRef}>\r\n              <BlogForm createBlog={handleBlogSubmit} />\r\n            </Togglable>\r\n            <Blogs\r\n              blogs={blogs}\r\n              fetch={fetchBlogs}\r\n              notificationHandler={handleNotifications}\r\n              likeHandler={handleLike}\r\n              removeHandler={handleBlogRemove}\r\n              user={user}\r\n            />\r\n          </main>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}